For Docker Instalation 
----------------------
sudo su -
sudo apt-get remove docker docker-engine docker.io containerd runc
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt-get update
sudo apt-get install -y docker-ce docker-ce-cli containerd.io


Docker Basic Commands
---------------------
docker pull <image>                       --> To pull image 
docker run -d -P <image name>             --> To run the image       (-d detached mode)
docker rmi -f <ID>                        --> To remove image  
docker ps                                 --> docker running container deatils
docker ps -a                              --> docker all containers
docker ps -aq                             --> all containers ID's 
docker ps -q                              --> running containers ID's
docker ps -l                              --> latest running container
docker ps -lq                             --> latest running containers ID's
docker exec -it <container ID> bashs      --> To enter in to container
docker connect <container ID>             --> To enter in to container
Ctrl+p+q                                  --> To exit from Container
docker container ls --format "table {{.ID}}\t{{.Names}}\t{{.Ports}}" -a  --> To know ports 
sudo docker inspect hopeful_johnson       --> Total info of container

    
docker inspect <container id>               
																									Container ID
			 message                     Command													 ^	     Container Name
			   ^                            ^														 |			^    Version
			   |                            |														 | 			|		 ^ 		
			   |                            |                                                        |          |        |       
docker commit -m "ubuntu with nginx"  -c 'CMD /usr/sbin/nginnx -g "daemon off;"' -c 'EXPOSE 80' 5a110ff82afa  phaninginx:v1

docker build -t <image name> .
Docker container index.html path --- /usr/share/nginx/html/
docker cp index.html vigorous_elbakyan:/usr/share/nginx/html/index.html
<html>
<head>
<title>Hi Mom</title>
</head>
<body>
<h1>Hi Mom!</h1>
</body>

Docker Network
--------------
docker network ls                                           ----> To know the list of network 
docker network create --driver=bridge mybridge              ----> To create new bridge
docker run -itd -P --name=mynginx3 --network=mybridge nginx ----> create a container with custom network 
docker network disconnect bridge nginx2                     ----> To remove a container from the network 
docker network connect mybridge mynginx2                    ----> To connect a network
   
Docker Stats
------------
docker stats                                                ---> To know the status of all containers
docker stats <ID>                                           ---> To know the perticular container status 
docker stats --no-stream <ID>                               ---> To know the latest status of container



https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/




To install Kubernetes
----------------------
sudo apt-get update
sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common

curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
sudo apt-get update ; clear
sudo apt-get install -y docker-ce
sudo service docker start ; clear

echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
sudo apt-get update ; clear
sudo apt-get install -y kubelet kubeadm kubectl	

On Master Node
---------------
sudo kubeadm init --ignore-preflight-errors=all

sudo mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

## Weave
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

kubectl get nodes
kubectl get all --all-namespaces

To create token to add pod
---------------------------
kubeadm token create --print-join-command --ttl=0


Kubernetes Commands
-------------------
kubectl get nodes     ------------------> To know nods
kubectl run pod1 --image tomcat --------> To run an Image in pod
             |             |
			 |             |
		Pod Name         Image Name  
kubectl get pods     -------------------> To know the Pod details
kubectl logs pod1    -------------------> To check the logs
kubectl logs -f pod1 -------------------> To check latest logs
kubectl get pods -o wide ---------------> To delete pod













8448981663
